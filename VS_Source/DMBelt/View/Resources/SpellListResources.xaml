<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:scm="clr-namespace:System.ComponentModel;assembly=WindowsBase">

    <CollectionViewSource x:Key="SpellCollection" Source="{Binding Path=SpellList}">
        <CollectionViewSource.GroupDescriptions>
            <PropertyGroupDescription PropertyName="Level" />
        </CollectionViewSource.GroupDescriptions>

        <!-- Sort descending by Spell Level -->
        <CollectionViewSource.SortDescriptions>
            <scm:SortDescription PropertyName="Level" Direction="Ascending" />
            <scm:SortDescription PropertyName="SpellName" Direction="Ascending" />
        </CollectionViewSource.SortDescriptions>
    </CollectionViewSource>

    <CollectionViewSource x:Key="PreparedSpellCollection" Source="{Binding Path=PreparedSpellList}">
        <CollectionViewSource.GroupDescriptions>
            <PropertyGroupDescription PropertyName="Level" />
        </CollectionViewSource.GroupDescriptions>

        <!-- Sort descending by Spell Level -->
        <CollectionViewSource.SortDescriptions>
            <scm:SortDescription PropertyName="Level" Direction="Ascending" />
        </CollectionViewSource.SortDescriptions>
    </CollectionViewSource>

    <GroupStyle x:Key="SpellCollectionStyle">
        <GroupStyle.HeaderTemplate>
            <DataTemplate>
                <TextBlock x:Name="txt" Background="{StaticResource Brush_HeaderBackground}"
                               FontWeight="Bold" Foreground="#EEE" Margin="1" Padding="4,2,0,2" Text="0th Level Spells"/>
                <DataTemplate.Triggers>
                    <DataTrigger Binding="{Binding Path=Name}" Value="1">
                        <Setter TargetName="txt" Property="Text" Value="1st Level Spells" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Path=Name}" Value="2">
                        <Setter TargetName="txt" Property="Text" Value="2nd Level Spells" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Path=Name}" Value="3">
                        <Setter TargetName="txt" Property="Text" Value="3rd Level Spells" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Path=Name}" Value="4">
                        <Setter TargetName="txt" Property="Text" Value="4th Level Spells" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Path=Name}" Value="5">
                        <Setter TargetName="txt" Property="Text" Value="5th Level Spells" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Path=Name}" Value="6">
                        <Setter TargetName="txt" Property="Text" Value="6th Level Spells" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Path=Name}" Value="7">
                        <Setter TargetName="txt" Property="Text" Value="7th Level Spells" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Path=Name}" Value="8">
                        <Setter TargetName="txt" Property="Text" Value="8th Level Spells" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Path=Name}" Value="9">
                        <Setter TargetName="txt" Property="Text" Value="9th Level Spells" />
                    </DataTrigger>
                </DataTemplate.Triggers>
            </DataTemplate>
        </GroupStyle.HeaderTemplate>
    </GroupStyle>

    <Style x:Key="HeaderStyle" TargetType="{x:Type GridViewColumnHeader}">

        <Setter Property="Background" Value="#111"/>
        <Setter Property="Foreground" Value="#999"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="BorderBrush" Value="#EEE" />
    </Style>

    <Style x:Key="SpellStyle" TargetType="{x:Type ListViewItem}">

        <Style.Resources>
            <LinearGradientBrush x:Key="ListItemHoverFill" StartPoint="0,0" EndPoint="0,1" >
                <GradientStop Color="#666" Offset="0"/>
                <GradientStop Color="#000" Offset="1"/>
            </LinearGradientBrush>
            
            <ContextMenu x:Key="SpellsKnownContextMenu" ItemsSource="{Binding Path=Commands}" >
                <ContextMenu.ItemContainerStyle>
                    <Style TargetType="MenuItem">
                        <Setter Property="Header" Value="{Binding Path=DisplayName}" />
                        <Setter Property="Command" Value="{Binding Path=Command}" />
                    </Style>
                </ContextMenu.ItemContainerStyle>
            </ContextMenu>
            
        </Style.Resources>
        <Setter Property="ContextMenu" Value="{StaticResource SpellsKnownContextMenu}" />
        <Setter Property="Template">

            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <Border CornerRadius="2" SnapsToDevicePixels="True"  
                                BorderThickness="{TemplateBinding BorderThickness}"   
                                BorderBrush="{TemplateBinding BorderBrush}"   
                                Background="{TemplateBinding Background}">
                        <Border Name="InnerBorder" CornerRadius="1" BorderThickness="1">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition MaxHeight="11" />
                                    <RowDefinition />
                                </Grid.RowDefinitions>

                                <GridViewRowPresenter Grid.RowSpan="2"   
                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"   
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Grid>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="{StaticResource ListItemHoverFill}" />
                            <Setter Property="BorderBrush" Value="#EEE" />
                        </Trigger>


                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />

                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="Foreground" Value="#08B"/>
        <!-- Stretch the content of each cell. -->
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />

        <!-- Bind the IsSelected property of a ListViewItem to the IsSelected property of a CharacterModulesViewModel object.-->
        <Setter Property="IsSelected" Value="{Binding Path=IsSelected, Mode=TwoWay}" />
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="ItemsControl.AlternationIndex" Value="1" />
                    <Condition Property="IsSelected" Value="False" />
                    <Condition Property="IsMouseOver" Value="False" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="#10000000" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>